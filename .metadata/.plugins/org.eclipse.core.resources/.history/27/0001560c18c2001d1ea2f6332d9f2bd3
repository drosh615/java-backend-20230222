package trainReservation.service;

import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

import trainReservation.entity.Seat;
import trainReservation.entity.StopStation;
import trainReservation.entity.Train;

public class ReservationService {
	public List<Train> getPossibleTrainList(GetTrainListDTo dto) {
		List<Train> possibleTrains = new ArrayList<>();
		
		// 검색
		for (Train train: trains) {
			List<StopStation> stopStations = train.getStopStation();
			// 
			int sameStationIndex = -1;
			
			for (int stopStationIndex = 0; stopStationIndex < stopStations.size(); stopStationIndex++) {
				String stopStationName = stopStations.get(stopStationIndex).getStationName();
				if(!dto.getDepartureStation().equals(stopStationName)) {
					continue;
				}
				
				// 이미 출발한 열차인지 아닌지 확인하기 위한
				LocalTime stationDepartureTime = LocalTime.parse(dto.getDepartureStation(), timeFormatter);
				
				if (stationDepartureTime.isBefore(departureTime)) {
					break;	//이미 지나간 열차 
				}
				
				sameStationIndex = stopStationIndex;
				break;
			}
			if (sameStationIndex == -1) {
				continue;
			}
			
			boolean isPossible =false;
			
			// 출발할 역 이후에 도착할 역이 있는지 확인
			for (int stopStationIndex = 0; stopStationIndex < stopStations.size(); stopStationIndex++) {
				String stationName = stopStations.get(stopStationIndex).getStationName();
				
				if (!dto.isEqualArrivalStation(stationName)) {
					continue;
				}
				
				if (stopStationIndex <= sameStationIndex) {
					break;	//열차 방향이 다름
				}
				
				isPossible = true;
				break;
			}
			
			if (!isPossible) {
				continue;
			}
			
			List<Seat> seats = train.getSeats();
			
			int possibleSeatcount = 0;
			for (Seat seat: seats) {
				if (!seat.isSeatStatus()) {
					possibleSeatcount++;
				}
			}
			
			if (possibleSeatcount < dto.getNumberOfPeople()) {
				continue;
			}
			
			possibleTrains.add(train);
		}
	}
}
