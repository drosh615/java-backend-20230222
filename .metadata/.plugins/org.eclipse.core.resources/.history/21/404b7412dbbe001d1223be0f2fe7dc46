package chapter5.C_DateTime;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.DayOfWeek;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;

/*
 * 날짜 및 시간
 */
public class DateTime {

	public static void main(String[] args) {
		/*
		 * 	System.currentTimeMillis()
		 *  현재시간을 long 타입으로  0.001초 단위로 표현
		 *  기준 1970년 1월 1일
		 */
		long startTime = System.currentTimeMillis();
		System.out.println(startTime);
		
		for (int count = 0; count < 100000000; count++) {
			count++;
		}
		long endTime = System.currentTimeMillis();
		System.out.println(endTime - startTime);
		
		/*
		 * Date class
		 * 날짜를 관리 해주는 클래스
		 * 주로 날짜와 관련된 데이터타입을 취급할 때 사용
		 */
		
//		Date now = Date.from(Instant.now());
//		System.out.println(now);
//		
//		java.util.Date minusTwoHour = Date.from(Instant.now().minus(2, ChronoUnit.HOURS));
		
		/*
		 * SimpleDateFormat
		 * Date 타입의 참조변수를 지정한 포멧의 문자열로 변경해주는 클래스
		 */
//		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy. MM. dd. HH:mm:ss");
		
		/*
		 * Time Package
		 * Date 와 Calander 클래스의 단점 보완
		 * 
		 * LocalDate class
		 * 날짜를 관리해주는 클래스
		 */
		LocalDate localDate = LocalDate.now();
		System.out.println(localDate);
		LocalDate localDateOf = LocalDate.of(2022, 12, 25);
		System.out.println(localDateOf);
		
		/*
		 * LocalTime class
		 * 시간을 관리해주는 클래스
		 */
		LocalTime localTime = LocalTime.now();
		System.out.println(localTime);
		LocalTime localTimeOf = LocalTime.of(12, 40);
		System.out.println(localTimeOf);
		
		/*
		 * LocalDateTime class
		 * 날짜와 시간을 관리해주는 클래스
		 */
		LocalDateTime localDateTime = LocalDateTime.now();
		System.out.println(localDateTime);
		LocalDateTime localDateTimeOf = LocalDateTime.of(localDateOf,localTimeOf);
		System.out.println(localDateTimeOf);
		
		/*
		 * .getxxx()
		 * 특정 날짜 혹은 시간 가져오기
		 */
		int year = localDateTime.getYear();
		int month = localDateTime.getMonthValue();
		int hour = localDateTime.getHour();
		int minute = localDateTime.getMinute();
		int second = localDateTime.getSecond();
		int nano = localDateTime.getNano();
		
		int dayOfYear = localDateTime.getDayOfYear();
		int dayOfMonth = localDateTime.getDayOfMonth();
		
		DayOfWeek dayOfWeek = localDateTime.getDayOfWeek();
		
		boolean isLeapYeae = localDate.isLeapYear();
		
		/*
		 * 특정 날찌 및 시간 변경
		 * 직접변경: withxxx(int타입 데이터);
		 * 더하기/빼기 : plusxxx(long타입) minusxxx(long타입)
		 */
		localDateTime = localDateTime.withYear(2012).plusWeeks(4).minusHours(9);
		Instant instant = localDateTime.atZone(ZoneId.systemDefault()).toInstant();
		Date dateTime = Date.from(instant);
		System.out.println(dateTime);
		
		
	}

}









